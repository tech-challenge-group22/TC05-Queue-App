name: Queue APP CI/CD

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Test
        run: npm test
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Build and Push to ECR
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 905418088791.dkr.ecr.us-east-1.amazonaws.com
        docker build -t queue/production .
        docker tag queue/production:latest 905418088791.dkr.ecr.us-east-1.amazonaws.com/queue/production:latest
        docker push 905418088791.dkr.ecr.us-east-1.amazonaws.com/queue/production:latest

  deploy-aws:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Configure AWS CLI
      run: aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} && aws configure set aws_session_token ${{ secrets.AWS_SESSION_TOKEN }}

    - name: Deploy to ECS
      run: |
        aws ecs update-service --cluster queue-ecs-cluster --service queue-web --force-new-deployment --region ${{ secrets.AWS_REGION }}